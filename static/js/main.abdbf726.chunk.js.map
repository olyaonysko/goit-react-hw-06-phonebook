{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts-action.js","redux/contacts-reducer.js","redux/store.js","components/Container/Container.js","components/ContactList/contactList-selector.js","components/ContactForm/ContactForm.js","components/Filter/filter-selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","deleteContacts","createAction","changeFilter","addContacts","name","number","payload","id","shortid","generate","contactsReducer","createReducer","state","filter","contact","filterReducer","_","combineReducers","contacts","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","rootReducer","devTools","process","persistor","persistStore","Container","children","className","s","contactsArray","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","resetForm","onSubmit","preventDefault","isMobilePhone","find","toLowerCase","console","log","toast","info","form","label","type","input","placeholder","onChange","button","filterValue","ContactList","filteredContacts","includes","onFilteredContacts","length","list","map","listItem","onClick","Filter","App","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.abdbf726.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__BQo0c\",\"listItem\":\"ContactList_listItem__3u8kr\",\"button\":\"ContactList_button__1cuxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3dqE5\",\"input\":\"Filter_input__nL_kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__174rk\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const deleteContacts = createAction('contacts/delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\nexport const addContacts = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { addContacts, deleteContacts, changeFilter } from './contacts-action';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContacts]: (state, { payload }) => [...state, payload],\r\n  [deleteContacts]: (state, { payload }) =>\r\n    state.filter(contact => {\r\n      return contact.id !== payload;\r\n    }),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport rootReducer from './contacts-reducer';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, rootReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import s from './Container.module.css';\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","export const contactsArray = state => state.contacts.contacts;\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsArray } from '../ContactList/contactList-selector';\nimport { toast } from 'react-toastify';\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\nimport s from './ContactForm.module.css';\nimport { addContacts } from '../../redux/contacts-action';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsArray);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!name || !number) {\n      toast.info('ðŸ‘º All fields must be filled!');\n      return;\n    }\n\n    if (!isMobilePhone(number)) {\n      toast.info('ðŸ‘º Telephone number must be numeric!');\n      return;\n    }\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      console.log('work');\n      toast.info(`ðŸ™„ ${name} is already in contacts!`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n      toast.info(`This number is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContacts(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          placeholder=\"+380(__)-___-__-__\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const filterValue = state => state.contacts.filter;\r\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts-action';\nimport { contactsArray } from './contactList-selector';\nimport { filterValue } from '../Filter/filter-selector';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsArray);\n  const filter = useSelector(filterValue);\n  const dispatch = useDispatch();\n\n  const onFilteredContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const filteredContacts = onFilteredContacts(contacts, filter);\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <ul className={s.list}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <li key={id} className={s.listItem}>\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                type=\"button\"\n                className={s.button}\n                onClick={() => dispatch(deleteContacts(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Your phonebook is empty. Add contact.</p>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts-action';\nimport { filterValue } from './filter-selector';\nimport { contactsArray } from '../ContactList/contactList-selector';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(filterValue);\n  const contacts = useSelector(contactsArray);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {contacts.length > 1 && (\n        <label className={s.label}>\n          Find contacts by name\n          <input\n            type=\"text\"\n            className={s.input}\n            placeholder=\"Enter name\"\n            value={filter}\n            onChange={event => dispatch(changeFilter(event.target.value))}\n          />\n        </label>\n      )}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","// import { useState, useEffect } from 'react';\n// import shortid from 'shortid';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1T1RL\",\"label\":\"ContactForm_label__Z3R1Q\",\"input\":\"ContactForm_input__1UJHI\",\"button\":\"ContactForm_button__2shmd ContactForm_input__1UJHI\"};"],"sourceRoot":""}